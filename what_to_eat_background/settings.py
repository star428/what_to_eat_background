"""
Django settings for what_to_eat_background project.

Generated by 'django-admin startproject' using Django 3.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-+cp-uce+%)wk+f986nr9z!c!oje!1tplmisxt6k_nh$x_pv#c&'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# simple UI to do
SIMPLEUI_DEFAULT_THEME = 'orange.css' # 默认UI
SIMPLEUI_HOME_INFO = False # 消除home的广告
SIMPLEUI_ANALYSIS = False
LANGUAGE_CODE = 'zh-hans' # 更改为中文
SIMPLEUI_CONFIG = {
    # 是否使用系统默认菜单，自定义菜单时建议关闭。
    'system_keep': False,

    # 用于菜单排序和过滤, 不填此字段为默认排序和全部显示。空列表[] 为全部不显示.
    'menu_display': ['后台管理', '权限认证'],

    # 设置是否开启动态菜单, 默认为False. 如果开启, 则会在每次用户登陆时刷新展示菜单内容。
    # 一般建议关闭。
    'dynamic': False,
    'menus': [
        {
            'app': 'auth',
            'name': '权限认证',
            'icon': 'fas fa-user-shield',
            'models': [
                {
                    'name': '用户列表',
                    'icon': 'fa fa-user',
                    'url': 'auth/user/'
                },
                {
                    'name': '用户组',
                    'icon': 'fa fa-th-list',
                    'url': 'auth/group/'
                }
            ]
        },

        {
            'name': '后台管理',
            'icon': 'fa fa-th-list',
            'models': [
                {
                    'name': '评论',
                    # 注意url按'/admin/应用名小写/模型名小写/'命名。
                    'url': '/admin/polls/comments',
                    'icon': 'fa fa-tasks'
                },
                {
                    'name': '收藏',
                    # 注意url按'/admin/应用名小写/模型名小写/'命名。
                    'url': '/admin/polls/favorite',
                    'icon': 'fa fa-tasks'
                },
                {
                    'name': '菜单',
                    # 注意url按'/admin/应用名小写/模型名小写/'命名。
                    'url': '/admin/polls/menu',
                    'icon': 'fa fa-tasks'
                },
                {
                    'name': '店铺',
                    # 注意url按'/admin/应用名小写/模型名小写/'命名。
                    'url': '/admin/polls/shop',
                    'icon': 'fa fa-tasks'
                },
                {
                    'name': '店铺标签',
                    # 注意url按'/admin/应用名小写/模型名小写/'命名。
                    'url': '/admin/polls/shoptag',
                    'icon': 'fa fa-tasks'
                },
                {
                    'name': '标签',
                    # 注意url按'/admin/应用名小写/模型名小写/'命名。
                    'url': '/admin/polls/tag',
                    'icon': 'fa fa-tasks'
                },

                {
                    'name': '用户偏好',
                    # 注意url按'/admin/应用名小写/模型名小写/'命名。
                    'url': '/admin/polls/userreference',
                    'icon': 'fa fa-tasks'
                },
                {
                    'name': '用户',
                    # 注意url按'/admin/应用名小写/模型名小写/'命名。
                    'url': '/admin/polls/users',
                    'icon': 'fa fa-tasks'
                },

            ]
        },
    ]
}
# Application definition

INSTALLED_APPS = [

    'simpleui',

    'polls.apps.PollsConfig',

    'rest_framework',

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'what_to_eat_background.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'what_to_eat_background.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    # 'default': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': BASE_DIR / 'db.sqlite3',
    # }
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'backgroundTest',
        'USER': 'root',
        'PASSWORD': '111111',
        'HOST': 'localhost',
        'PORT': 3306

    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/


# 配置静态文件url
# MEDIA_ROOT =BASE_DIR#os.path.join(BASE_DIR, 'images')
# MEDIA_URL = '/static/polls/images/'

STATIC_URL = '/static/'

MEDIA_URL = "/media/"   # 媒体文件别名(相对路径) 和 绝对路径
MEDIA_ROOT = (
    os.path.join(BASE_DIR, 'media/')
)
# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAdminUser',
    ],
}

# 尝试让post能够访问
CORS_ALLOW_CREDENTIALS = True